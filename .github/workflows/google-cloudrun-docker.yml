name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main
      - gcp-build

env:
  PROJECT_ID: fpi-sms-api
  REGISTRY: asia.gcr.io
  GHUB_REPO_NAME: fpi-sms-api
  SERVICE: fpi-sms-api-v1
  REGION: asia-east1

jobs:
  deploy:
    permissions:
      contents: 'read'
      packages: 'write'
      id-token: 'write'

    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Google Auth
        id: gcp-auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: Login to Google Container Registry
        uses: 'docker/login-action@v2'
        with:
          registry: ${{ env.REGISTRY }}
          username: 'oauth2accesstoken'
          password: ${{ steps.gcp-auth.outputs.access_token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: 'docker/metadata-action@v4'
        with:
          images: ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.GHUB_REPO_NAME }}/${{ env.SERVICE }}:${{ github.sha }}

      - name: Build and push Docker image
        uses: 'docker/build-push-action@v3'
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.GHUB_REPO_NAME }}/${{ env.SERVICE }}:${{ github.sha }}   # ${{ steps.meta.outputs.tags }} - (For public repositories like docker hub)
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GITHUB_USERNAME=${{ github.actor }}
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.GHUB_REPO_NAME }}/${{ env.SERVICE }}:${{ github.sha }}
          project_id: ${{ env.PROJECT_ID }}
          env_vars: | 
            OIDC_CLIENT_ID=${{ secrets.OIDC_CLIENT_ID }}
            OIDC_AUTH_URL=${{ secrets.OIDC_AUTH_URL }}
            SMS_API_KEY=${{ secrets.SMS_API_KEY }}
            SMS_SID=${{ secrets.SMS_SID }}
            M360_BROADCAST_URL=${{ secrets.M360_BROADCAST_URL }}
          secrets: |
            MONGO_CONN_STRING=vbl_mongo_connection_string:latest
            OIDC_SECRET=oidc_secret_keycloak:latest
            SMS_SECRET=m360_secret_api_key:latest
            FPI_MO_WEBHOOK_KEY=fpi_mo_incoming_webook_key:latest
            FPI_DLR_WEBHOOK_KEY=fpi_dlr_incoming_webhook_key:latest
            FPI_GEN_WEBHOOK_KEY=fpi_gen_incoming_webhook_key:latest

      - name: Configure cloud run
        run: |-
          gcloud run services add-iam-policy-binding ${{ env.SERVICE }} --member=allUsers --role=roles/run.invoker --region=${{ env.REGION }}          

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}